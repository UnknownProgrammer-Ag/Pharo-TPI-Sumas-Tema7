SimpleSwitchMorph subclass: #Bloque	instanceVariableNames: 'mouseAction n'	classVariableNames: ''	package: 'Sumas Bizarras'!!Bloque commentStamp: 'AgustinBalbuena 11/16/2023 22:43' prior: 0!"Represento a los bloques que componen la matriz"!!Bloque methodsFor: 'event handling' stamp: 'AgustinBalbuena 11/17/2023 13:46'!mouseUp: anEvent	mouseAction value! !!Bloque methodsFor: 'event handling' stamp: 'AgustinBalbuena 11/17/2023 13:47'!mouseMove: anEvent! !!Bloque methodsFor: 'accessing' stamp: 'AgustinBalbuena 11/26/2023 02:48'!n	^ n! !!Bloque methodsFor: 'accessing' stamp: 'AgustinBalbuena 11/17/2023 13:47'!mouseAction: anEvent	^mouseAction := anEvent! !!Bloque methodsFor: 'accessing' stamp: 'AgustinBalbuena 11/26/2023 02:48'!n: anObject	n := anObject! !!Bloque methodsFor: 'initialization' stamp: 'AgustinBalbuena 11/26/2023 02:51'!initialize 			super initialize.	self n: (1 to: 85) atRandom.	self label:(self n)asString.	self borderWidth: 5.	bounds:= 0@0 corner: 75@75.	onColor := (Color lightGray).	offColor := Color darkGray.	self useRoundedCorners.	self turnOn.	! !Bloque subclass: #Bizarro	instanceVariableNames: 'personalidad'	classVariableNames: ''	package: 'Sumas Bizarras'!!Bizarro commentStamp: 'AgustinBalbuena 11/26/2023 04:45' prior: 0!"Represento una subclase de bloque que tiene una personalidad variante (Puedo ser bueno o malo)"!!Bizarro methodsFor: 'accessing' stamp: 'AgustinBalbuena 11/26/2023 04:52'!personalidad	^ personalidad! !!Bizarro methodsFor: 'initialization' stamp: 'AgustinBalbuena 11/26/2023 04:48'!initialize	super initialize.	self n: (1 to: 85) atRandom.	self label:(self n)asString.	self borderWidth: 5.	bounds:= 0@0 corner: 75@75.	onColor := (Color r:0.23 g:0.46 b:0.70 alpha:1).	offColor := (Color r:0.078 g:0.29 b:0.53 alpha:1).	self useRoundedCorners.	self turnOn.	personalidad:=((1 to:2) atRandom).	! !BorderedMorph subclass: #Inicio	instanceVariableNames: ''	classVariableNames: ''	package: 'Sumas Bizarras'!!Inicio commentStamp: 'AgustinBalbuena 11/17/2023 14:23' prior: 0!"Representa el inicio del juego que al comenzar la partida"!!Inicio methodsFor: 'initialization' stamp: 'AgustinBalbuena 11/25/2023 14:29'!Ayuda	|texto cuadro botonCerrar|	self terminar.	cuadro:= BorderedMorph new.	cuadro bounds: (1200@450 corner:700@300).	cuadro color: (Color r:0.38 g:0.33 b:0.39 alpha:1).	texto:= TextMorph new.	texto contents: 'La dificultad se divide en tres niveles:-El primer nivel no tiene bloques sorpresa y es el tamaño más reducido.-El segundo nivel es el modo normal, el modelo original del juego.-El tercer nivel, el modo dificil aumenta el tamaño a 9x9 y agrega bloques bizarros.-Los bloques bizarros pueden tener tesoros o trampas'.	texto position: (cuadro position+(25@30)).	cuadro addMorph: texto.		botonCerrar:= self boton: 'Entendido' ejecutar: [cuadro delete.		self reiniciar].	botonCerrar position: (cuadro position+(200@152)).	cuadro addMorph: botonCerrar.	cuadro openInWorld.			! !!Inicio methodsFor: 'initialization' stamp: 'AgustinBalbuena 11/25/2023 13:49'!reiniciar		Inicio  new openInWorld.	! !!Inicio methodsFor: 'initialization' stamp: 'AgustinBalbuena 11/25/2023 13:22'!initialize	|cabecera botonInicio botonCerrar botonAyuda|		super initialize.	self bounds: (1050@250 corner:850@550).	self color: (Color r: 0.155 g:0.212 b:0.33822 alpha:0.75).		cabecera := StringMorph contents: 'Sumas Bizarras'.	cabecera position: (self position + (50@50)).	self addMorph: cabecera.		botonInicio:= self boton: 'Iniciar Partida' ejecutar:[self inicioPartida].	botonAyuda := self boton: 'Explicar Niveles de Dificultad' ejecutar:[self Ayuda].	botonCerrar := self boton: 'Cerrar Juego' ejecutar:[self terminar].	botonInicio position: (self position + (50@100)).	botonAyuda position: (self position + (16@150)).	botonCerrar position: (self position + (53@200)).	self addMorph: botonInicio.	self addMorph: botonAyuda.	self addMorph: botonCerrar.		self openInWorld.				! !!Inicio methodsFor: 'initialization' stamp: 'AgustinBalbuena 11/25/2023 11:50'!boton: etiqueta ejecutar: accion	|boton|	boton := SimpleButtonMorph new label: etiqueta.	boton color: (Color r:0  g:51  b:102  alpha:0.5) .	boton borderWidth:  1.	boton borderColor: Color black.	boton extent: 90@50.	boton fitContents.	boton on: #click send: #value to: accion.	^boton. ! !!Inicio methodsFor: 'accessing' stamp: 'AgustinBalbuena 11/25/2023 11:27'!inicioPartida	|part|	self terminar.	part:= Partida new openInWorld.! !!Inicio methodsFor: 'accessing' stamp: 'AgustinBalbuena 11/25/2023 11:05'!terminar		self delete.	! !Object subclass: #Jugador	instanceVariableNames: 'nombre puntaje estado coordenadaLock'	classVariableNames: ''	package: 'Sumas Bizarras'!!Jugador commentStamp: 'AgustinBalbuena 11/16/2023 22:43' prior: 0!"Represento a los jugadores"!!Jugador methodsFor: 'initialization' stamp: 'AgustinBalbuena 11/26/2023 02:10'!crear: aString inicia: aCoord	nombre:=aString.	puntaje:=0.	estado:= ''.	coordenadaLock:=aCoord.! !!Jugador methodsFor: 'accessing' stamp: 'AgustinBalbuena 11/26/2023 02:34'!estado	^ estado! !!Jugador methodsFor: 'accessing' stamp: 'AgustinBalbuena 11/26/2023 05:06'!restarValor: aNumber	puntaje:=puntaje-aNumber.! !!Jugador methodsFor: 'accessing' stamp: 'AgustinBalbuena 11/26/2023 02:34'!coordenadaLock	^ coordenadaLock! !!Jugador methodsFor: 'accessing' stamp: 'AgustinBalbuena 11/26/2023 00:22'!sumarValor: aNumber		puntaje:=puntaje+aNumber.! !!Jugador methodsFor: 'accessing' stamp: 'AgustinBalbuena 11/26/2023 00:41'!nombre	^nombre.! !!Jugador methodsFor: 'accessing' stamp: 'AgustinBalbuena 11/26/2023 04:29'!puntaje	^puntaje! !!Jugador methodsFor: 'accessing' stamp: 'AgustinBalbuena 11/26/2023 02:34'!estado: anObject	estado := anObject! !!Jugador methodsFor: 'accessing' stamp: 'AgustinBalbuena 11/26/2023 02:34'!coordenadaLock: anObject	coordenadaLock := anObject! !BorderedMorph subclass: #Partida	instanceVariableNames: 'tablero dificultad p1 p2'	classVariableNames: ''	package: 'Sumas Bizarras'!!Partida commentStamp: 'AgustinBalbuena 11/16/2023 22:42' prior: 0!"Represento la Partida, involucro todo lo que se refiere al tablero y los jugadores"!!Partida methodsFor: 'accessing' stamp: 'AgustinBalbuena 11/26/2023 04:50'!crearBizarro: i at: j		|temp origen|	origen:= self innerBounds origin.	temp:=Bizarro new.	temp position: ((i-1)*temp width)@((j-1)*temp height) + origen.	temp mouseAction: [ self procesarEleccionAt: i at: j ].	self addMorph: temp.	^temp! !!Partida methodsFor: 'accessing' stamp: 'AgustinBalbuena 11/26/2023 02:35'!dificultad	^ dificultad! !!Partida methodsFor: 'accessing' stamp: 'AgustinBalbuena 11/26/2023 05:13'!procesarEleccionAt:i at: j|puntos|puntos:=((tablero at:i at:j) n)asInteger.(self dificultad = 9)ifFalse:[	((p1 estado)='Jugando')ifTrue:[			((p1 coordenadaLock)= j)ifTrue:[				(tablero at:i at:j)turnOff . "Se bloquea ese valor"				p1 sumarValor: puntos .				p1 estado: 'En Espera'.				p2 estado: 'Jugando'.				p2 coordenadaLock: i.				]ifFalse:[UIManager default alert: 'Esa posicion esta fuera de alcance'].		]ifFalse:[ "Si el p1 no esta jugando es turno de p2"			((p2 coordenadaLock)= i)ifTrue:[				(tablero at:i at:j)turnOff. "Se bloquea ese valor"				p2 sumarValor: puntos.				p2 estado: 'En Espera'.				p1 estado: 'Jugando'.				p1 coordenadaLock: j.				]ifFalse:[UIManager default alert: 'Esa posicion esta fuera de alcance '].	].]ifTrue:[		((p1 estado)='Jugando')ifTrue:[			((p1 coordenadaLock)= j)ifTrue:[				(tablero at:i at:j)turnOff . "Se bloquea ese valor"				p1 sumarValor: puntos.				p1 estado: 'En Espera'.				p2 estado: 'Jugando'.				p2 coordenadaLock: i.								((tablero at:i at:j) personalidad = 1)ifTrue:[						UIManager default alert: 'Caiste en un bloque bizarro BUENO. Le gustan los valores pares'.						((p1 puntaje \\ 2)=0)ifTrue:[p1 sumarValor: (p1 puntaje//4)]ifFalse:[p1 sumarValor: (p1 puntaje //5)].]				ifFalse:[											UIManager default alert: 'Caiste en un bloque bizarro ENOJADO. Le gustan los valores impares'.						((p1 puntaje \\ 2)~=0)ifTrue:[p1 restarValor: (p1 puntaje//5)]ifFalse:[p1 restarValor: (p1 puntaje //4)].].			]ifFalse:[UIManager default alert: 'Esa posicion esta fuera de alcance'].		]	ifFalse:[ "Si el p1 no esta jugando es turno de p2"			((p2 coordenadaLock)= i)ifTrue:[				(tablero at:i at:j)turnOff. "Se bloquea ese valor"				p2 sumarValor: puntos.				p2 estado: 'En Espera'.				p1 estado: 'Jugando'.				p1 coordenadaLock: j.							((tablero at:i at:j) personalidad = 1)ifTrue:[						UIManager default alert: 'Caiste en un bloque bizarro BUENO. Le gustan los valores pares'.						((p2 puntaje \\ 2)=0)ifTrue:[p2 sumarValor: (p2 puntaje//4)]ifFalse:[p2 sumarValor: (p2 puntaje //5)].]				ifFalse:[											UIManager default alert: 'Caiste en un bloque bizarro ENOJADO. Le gustan los valores impares'.						((p2 puntaje \\ 2)~=0)ifTrue:[p2 restarValor: (p2 puntaje//5)]ifFalse:[p2 restarValor: (p2 puntaje //4)].].			]ifFalse:[UIManager default alert: 'Esa posicion esta fuera de alcance '].	].].self verificarResultados.! !!Partida methodsFor: 'accessing' stamp: 'AgustinBalbuena 11/26/2023 02:35'!p2	^ p2! !!Partida methodsFor: 'accessing' stamp: 'AgustinBalbuena 11/22/2023 19:51'!terminar		self delete.! !!Partida methodsFor: 'accessing' stamp: 'AgustinBalbuena 11/26/2023 02:35'!p1	^ p1! !!Partida methodsFor: 'accessing' stamp: 'AgustinBalbuena 11/26/2023 03:35'!verificarResultados		|estado|	estado:= true.	1 to: dificultad do: [ :i|		1 to: dificultad do:[ :j|				(tablero at:i at:j)isOn ifTrue:[estado:=false] "Si alguna casilla todavía esta encendida continua el juego"						]		 ].	estado ifTrue:[ self mostrarGanador.]! !!Partida methodsFor: 'accessing' stamp: 'AgustinBalbuena 11/26/2023 04:25'!pasar	|resgi resgj|	1 to: dificultad do: [ :i|		1 to: dificultad do:[ :j|				(tablero at:i at:j)isOn ifTrue:[resgi:=i.					resgj:=j]]].	((p1 estado)='Jugando')ifTrue:[			p1 estado: 'En Espera'.			p2 estado: 'Jugando'.			p2 coordenadaLock: resgi.			UIManager default alert: 'Pasa el turno a Jugador: ',p2 nombre,' en la columna',resgi asString. 		]ifFalse:[			p1 estado: 'Jugando'.			p2 estado: 'En Espera'.			p1 coordenadaLock: resgj.			UIManager default alert: 'Pasa el turno a Jugador: ',p1 nombre,' en la fila',resgj asString.		]! !!Partida methodsFor: 'accessing' stamp: 'AgustinBalbuena 11/23/2023 17:08'!reinicio		self delete.	Partida new openInWorld.! !!Partida methodsFor: 'accessing' stamp: 'AgustinBalbuena 11/26/2023 03:02'!crearBloque: i at: j		|temp origen|	origen:= self innerBounds origin.	temp:=Bloque new.	temp position: ((i-1)*temp width)@((j-1)*temp height) + origen.	temp mouseAction: [ self procesarEleccionAt: i at: j ].	self addMorph: temp.	^temp! !!Partida methodsFor: 'accessing' stamp: 'AgustinBalbuena 11/26/2023 03:42'!mostrarGanador	| mensaje ganador |	ganador := p1 puntaje > p2 puntaje		           ifTrue: [ p1 nombre ]		           ifFalse: [ p2 nombre ].	mensaje := UIManager default		           chooseFrom: #( 'Nuevo Juego' 'Cerrar' )		           values: #( 1 2 )		           lines: #( 1 2 )		           message:		           'El jugador ' , ganador asString		           , ' tuvo el mayor puntaje'		           title: 'GANADOR!!'.	mensaje = 1		ifTrue: [ self reinicio ]		ifFalse: [ self terminar ]! !!Partida methodsFor: 'initialization' stamp: 'AgustinBalbuena 11/26/2023 03:48'!initialize		| bloque alto ancho n |	super initialize.	bloque:= Bloque new.	alto := bloque height.	ancho := bloque width.		self elegirDificultad.	n:= dificultad.		p1:= Jugador new.	p1 crear: (UIManager default request: 'Nombre Jugador1 [Filas]') inicia:((n//2)+1) .	p1 estado: 'Jugando'.	p2:= Jugador new.	p2 crear: (UIManager default request: 'Nombre Jugador2 [Columnas]') inicia:0.		p2 estado: 'En Espera'.		self bounds: (755@240 extent: ((ancho*n)@(alto*n))+(2*self borderWidth)).	self color: (Color pink alpha:0.5).		tablero:= Array2D new: n tabulate: [ :i :j| self crearBloque:i at: j ].			self funcionalidades.! !!Partida methodsFor: 'initialization' stamp: 'AgustinBalbuena 11/26/2023 02:03'!elegirDificultad	dificultad:=(UIManager default 	chooseFrom: #('Facil (5x5)' 'Normal (7x7)' 'Dificil (9x9)') 	values: #(5 7 9) 	lines: #(1 2 3) 	message: 'Elija la dificultad [Dificil solo para los expertos]' title: 'Sumas Bizarras'). ! !!Partida methodsFor: 'initialization' stamp: 'AgustinBalbuena 11/26/2023 01:29'!mostrarOponentes| jugadores duel|duel:=BorderedMorph new.duel bounds:(0@0 corner:180@30).duel position: 850@170.duel color: (Color r:0.041 g:0.51 b:0.30 alpha:1).duel borderWidth: 1.duel borderColor: Color black.	jugadores := TextMorph new.jugadores contents: (p1 nombre,' vs ',p2 nombre).jugadores center: duel center.duel addMorph: jugadores.^duel.! !!Partida methodsFor: 'initialization' stamp: 'AgustinBalbuena 11/23/2023 20:26'!boton: etiqueta ejecutar: accion	|boton|	boton := SimpleButtonMorph new label: etiqueta.	boton color: (Color r:0  g:51  b:102  alpha:0.5)  .	boton borderWidth:  1.	boton borderColor: Color black.	boton extent: 90@50.	boton fitContents.	boton on: #click send: #value to: accion.	^boton.  ! !!Partida methodsFor: 'initialization' stamp: 'AgustinBalbuena 11/26/2023 04:06'!funcionalidades		|barra botonReinicio botonCerrar botonPasar vs|	barra := Morph new layoutPolicy: RowLayout new; color: Color transparent.		botonReinicio  := self boton: 'Reiniciar' ejecutar: [ self reinicio ].	botonCerrar := self boton: 'Cerrar' ejecutar: [ self terminar ].	botonPasar := self boton: 'Pasar Turno' ejecutar: [ self pasar ].		vs:= self mostrarOponentes.		barra addMorphCentered: botonCerrar.	barra addMorph: botonReinicio.	barra addMorph: botonPasar.		(tablero at:1 at:1) addMorph: vs.	(tablero at:1 at:1) addMorph: barra.	barra position: 1000@200.	^barra	 ! !